#Most information found from the book tmux 2 by Brian P.Hogan
#Setting the prefix from C-b to C-a
set -g prefix C-a

#Free original C-b prefix binding
unbind C-b

#Want all 256 colors
#Works on all applications but italics will not render
#set -g default-terminal "screen-256color"
#Renders italics but may be too modern.
set -g default-terminal "xterm-256color"

#Set the delay between prefix and command
set -s escape-time 1

#Set the base index for windows to 1 and not 0
set -g base-index 1

#Set the b ase index for panes to 1 and not 0
set -g pane-base-index 1

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Ensure that we can send C-A to other apps
bind C-a send-prefix

#splitting panes with | and -
bind | split-window -h
bind _ split-window -v

#split pane and keep current directory of exisiting pane
bind - split-window -v -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"

#move between panes with Prefix h, j, k, l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#Quick window selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

#Resizing Panes quickly and repeat
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

#No mouse support
set -g mouse off

#Set the status line color
set -g status-style fg=white,bg=black

#set the color of window list
setw -g window-status-style fg=blue,bg=black

#set colors for active window
setw -g window-status-current-style fg=white,bold,bg=red

#colors for pane borders
setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=white,bg=yellow

#active pane is normal other shaded out
setw -g window-style fg=colour240,bg=black
setw -g window-active-style fg=white,bg=colour235

#command/message line
set -g message-style fg=white,bold,bg=black

#Status line left side show session window and pane
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

#Status line right side
#set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

#Update status line every sixty seconds
set -g status-interval 60

#center the status line
set -g status-justify centre

#enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

#enable vi mode for tmux
setw -g mode-keys vi

#Remapping copy and paste to be like vim
bind Escape copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -sel clipboard"
unbind p
bind p paste-buffer

#wrapper for copy and pasting to system clipboard
#Note this only works for ubuntu
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#bind -T vi-copy y copy-pipe "xclip -sel clip -i"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"


#Log output to a text file and toggle it
#bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

#tmux navigate panes quickly vim tmux integration
#Method found from https://blog.bugsnag.com/tmux-and-vim/
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind C-l send-keys 'C-l'

#Tmux plugin manager
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-sessionist'

#for vim restoring sessions
#set -g @resurrect-strategy-vim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
